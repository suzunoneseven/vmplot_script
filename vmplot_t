#!/bin/sh

#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2004 Mark Wong & Open Source Development Lab, Inc.
#
# 2011/07/15 modified by nemf
# 2018/01/26 modified by Starry Bellsound


INFILE="vmstat_t.out"
OUTDIR="/var/www/html/vmplot_t"
DATAFILE="vmstat_t.data"

DEFAULT_SIZE="set size ratio 0.3" 
# DEFAULT_SIZE="set size 0.9, 0.9"

# MB
MAX_MEMORY_SIZE=3000

[ -z `which gnuplot 2>/dev/null` ] && echo "gunplot must be installed for this to work" && exit 1

usage(){
        echo "Usage: $0 [optinos]..."
        echo ""
        echo " -i       specify input file, By default, vmstat_t.out"
        echo " -o       specify HTML output directory, By default, /var/www/html/vmplot_t"
        echo " -h       show help messages"
        echo ""
}

case "$1" in
        -h)
                usage
                exit 1
                ;;
esac

while getopts "i:o:x:" opt; do
	case $opt in
		i)
			INFILE=$OPTARG
			;;
		o)
			OUTDIR=$OPTARG
			;;
	esac
done

if [ ! -f "$INFILE" ]; then
	echo "$INFILE does not exist."
	exit 1
fi

# Blindly create the output directory.
mkdir -p $OUTDIR

# This is based off vmstat with a header like:
#
##  vmstat -n -S m 1 | awk '{print strftime("%H:%M:%S"), $0}'

#15:23:33 procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu------
#15:23:33  r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
#15:23:33  1  0      0   6008  39064 174944    0    0    44    74   22   24  1  0 99  0  0
# 1        2  3      4      5      6      7    8    9    10    11   12   13 14 15 16 17 18

# Also add another column at the end to represent total processor utilization.
cat ${INFILE} | sed -e "1,2d" | awk '{ print $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $14+$15+$17 }' > ${OUTDIR}/${DATAFILE}

# Plot the procs information.
# NAME="procs"
# INPUT_FILE="${NAME}.input"
# PNG_FILE="${NAME}.png"
# echo "set term png size 1280,600" > ${OUTDIR}/${INPUT_FILE}
# echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set title \"Procs\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set xdata time" >> ${OUTDIR}/${INPUT_FILE}
# echo "set timefmt \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set format x \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
# echo "set xtics rotate by 90 offset 0,-3.5" >> ${OUTDIR}/${INPUT_FILE}
# echo "set ylabel \"Count\"" >> ${OUTDIR}/${INPUT_FILE}
# echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
# echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
# echo "set key below" >> ${OUTDIR}/${INPUT_FILE}
# echo "plot \"${DATAFILE}\" using 1:2 title \"waiting for run time\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
# echo "     \"${DATAFILE}\" using 1:3 title \"in uninterruptible sleep\" with lines" >> ${OUTDIR}/${INPUT_FILE}
# (cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE})

# Plot the memory information.
NAME="memory"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "set term png size 1280,600" > ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set title \"Memory\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set xdata time" >> ${OUTDIR}/${INPUT_FILE}
echo "set timefmt \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set format x \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xtics rotate by 90 offset 0,-3.5" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"Megabytes\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:${MAX_MEMORY_SIZE}]" >> ${OUTDIR}/${INPUT_FILE}
echo "set key below" >> ${OUTDIR}/${INPUT_FILE}
echo "plot \"${DATAFILE}\" using 1:4 title \"Swapped\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:5 title \"Free\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:6 title \"Buffers\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:7 title \"Cache\" with lines" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE})

# Plot the swap information.
# NAME="swap"
# INPUT_FILE="${NAME}.input"
# PNG_FILE="${NAME}.png"
# echo "set term png size 1280,600" > ${OUTDIR}/${INPUT_FILE}
# echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set title \"Swap\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set xdata time" >> ${OUTDIR}/${INPUT_FILE}
# echo "set timefmt \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set format x \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
# echo "set xtics rotate by 90 offset 0,-3.5" >> ${OUTDIR}/${INPUT_FILE}
# echo "set ylabel \"Kilobytes / Second\"" >> ${OUTDIR}/${INPUT_FILE}
# echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
# echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
# echo "set key below" >> ${OUTDIR}/${INPUT_FILE}
# echo "plot \"${DATAFILE}\" using 1:8 title \"in from disk\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
# echo "     \"${DATAFILE}\" using 1:9 title \"out to disk\" with lines" >> ${OUTDIR}/${INPUT_FILE}
# (cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE} )

# Plot the i/o information.
NAME="io"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "set term png size 1280,600" > ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set title \"IO\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set xdata time" >> ${OUTDIR}/${INPUT_FILE}
echo "set timefmt \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set format x \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xtics rotate by 90 offset 0,-3.5" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"Blocks per Second\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
echo "set key below" >> ${OUTDIR}/${INPUT_FILE}
echo "plot \"${DATAFILE}\" using 1:10 title \"received from device\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:11 title \"sent to device\" with lines" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE} )

# Plot the interrupt.
NAME="in"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "set term png size 1280,600" > ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set title \"Interrupts\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set xdata time" >> ${OUTDIR}/${INPUT_FILE}
echo "set timefmt \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set format x \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xtics rotate by 90 offset 0,-3.5" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"# of Interrupts / Second\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
echo "set key below" >> ${OUTDIR}/${INPUT_FILE}
echo "plot \"${DATAFILE}\" using 1:12 title \"interrupts\" with lines" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE} )

# Plot the interrupt.
# NAME="cs"
# INPUT_FILE="${NAME}.input"
# PNG_FILE="${NAME}.png"
# echo "set term png size 1280,600" > ${OUTDIR}/${INPUT_FILE}
# echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set title \"Context Switches\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set xdata time" >> ${OUTDIR}/${INPUT_FILE}
# echo "set timefmt \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set format x \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
# echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
# echo "set xtics rotate by 90 offset 0,-3.5" >> ${OUTDIR}/${INPUT_FILE}
# echo "set ylabel \"# of Context Switches / Second\"" >> ${OUTDIR}/${INPUT_FILE}
# echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
# echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
# echo "set key below" >> ${OUTDIR}/${INPUT_FILE}
# echo "plot \"${DATAFILE}\" using 1:13 title \"context switches\" with lines" >> ${OUTDIR}/${INPUT_FILE}
# (cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE} )

# Plot the processor utilization.
NAME="cpu"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "set term png size 1280,600" > ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set title \"System Processor Utilization\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set xdata time" >> ${OUTDIR}/${INPUT_FILE}
echo "set timefmt \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set format x \"%Y-%m-%d_%H:%M:%S\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xtics rotate by 90 offset 0,-3.5" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"% Utilized\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:100]" >> ${OUTDIR}/${INPUT_FILE}
echo "set key below" >> ${OUTDIR}/${INPUT_FILE}
echo "plot \"${DATAFILE}\" using 1:18 title \"total\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:14 title \"user\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:15 title \"system\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:16 title \"idle\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:17 title \"wait\" with lines" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE} )


(
echo "<html>"
echo "<head><title>$0 output</title></head>"
echo "<body style='width: 95%;'>"
echo "<a href='#memory'>memory</a> | <a href='#cpu'>CPU</a> | <a href='#io'>Disk I/O</a> | "
# echo "<a href='#memory'>memory</a> | <a href='#swap'>swap</a> | <a href='#cpu'>CPU</a> | <a href='#io'>Disk I/O</a> | "
# echo "<a href='#procs'>Processes</a> | <a href='#cs'>Context Switches</a> | <a href='#in'>Interrupts</a><br /> "

echo "<div>"
echo "<a name='memory'></a><img src='memory.png' /><br />"
echo "<hr>"
# echo "<a name='swap'></a><img src='swap.png' /><br />"
# echo "<hr>"
echo "<a name='cpu'></a><img src='cpu.png' /><br />"
echo "<hr>"
echo "<a name='io'></a><img src='io.png' /><br />"
echo "<hr>"
# echo "<a name='procs'></a><img src='procs.png' /><br />"
# echo "<hr>"
# echo "<a name='cs'></a><img src='cs.png' /><br />"
# echo "<hr>"
# echo "<a name='in'></a><img src='in.png' /><br />"
echo "</div>"
echo "</body>"
echo "</html>"

) > ${OUTDIR}/index.html

exit 0
